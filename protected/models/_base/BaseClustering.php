<?php

/**
 * This is the model base class for the table "tbl_clustering".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Clustering".
 *
 * Columns in table "tbl_clustering" available as properties of the model,
 * followed by relations of table "tbl_clustering" available as properties of the model.
 *
 * @property string $id
 * @property string $algorithm
 * @property double $score
 * @property string $user
 * @property string $startTime
 * @property double $precision
 * @property double $recall
 *
 * @property Cluster[] $clusters
 * @property Algorithm $algorithm0
 * @property User $user0
 */
abstract class BaseClustering extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_clustering';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Clustering|Clusterings', $n);
	}

	public static function representingColumn() {
		return 'startTime';
	}

	public function rules() {
		return array(
			array('algorithm, score, user', 'required'),
			array('score, precision, recall', 'numerical'),
			array('algorithm, user', 'length', 'max'=>20),
			array('startTime', 'safe'),
			array('startTime, precision, recall', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, algorithm, score, user, startTime, precision, recall', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'clusters' => array(self::HAS_MANY, 'Cluster', 'clustering'),
			'algorithm0' => array(self::BELONGS_TO, 'Algorithm', 'algorithm'),
			'user0' => array(self::BELONGS_TO, 'User', 'user'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'algorithm' => null,
			'score' => Yii::t('app', 'Score'),
			'user' => null,
			'startTime' => Yii::t('app', 'Start Time'),
			'precision' => Yii::t('app', 'Precision'),
			'recall' => Yii::t('app', 'Recall'),
			'clusters' => null,
			'algorithm0' => null,
			'user0' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('algorithm', $this->algorithm);
		$criteria->compare('score', $this->score);
		$criteria->compare('user', $this->user);
		$criteria->compare('startTime', $this->startTime, true);
		$criteria->compare('precision', $this->precision);
		$criteria->compare('recall', $this->recall);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}