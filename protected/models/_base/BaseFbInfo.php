<?php

/**
 * This is the model base class for the table "tbl_fb_info".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "FbInfo".
 *
 * Columns in table "tbl_fb_info" available as properties of the model,
 * and there are no model relations.
 *
 * @property string $id
 * @property string $fbid
 * @property string $createdAt
 * @property string $name
 * @property string $first_name
 * @property string $middle_name
 * @property string $last_name
 * @property string $gender
 * @property string $locale
 * @property string $link
 * @property string $age_range
 * @property string $birthday
 * @property string $hometown_name
 * @property string $hometown_id
 * @property string $location_name
 * @property string $location_id
 * @property string $political
 * @property string $religion
 * @property string $relationship_status
 *
 */
abstract class BaseFbInfo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'tbl_fb_info';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'FbInfo|FbInfos', $n);
	}

	public static function representingColumn() {
		return 'createdAt';
	}

	public function rules() {
		return array(
			array('fbid', 'required'),
			array('fbid, gender, locale, age_range, birthday', 'length', 'max'=>20),
			array('name, first_name, middle_name, last_name, hometown_name, location_name, political, religion, relationship_status', 'length', 'max'=>100),
			array('link', 'length', 'max'=>200),
			array('hometown_id, location_id', 'length', 'max'=>30),
			array('createdAt', 'safe'),
			array('createdAt, name, first_name, middle_name, last_name, gender, locale, link, age_range, birthday, hometown_name, hometown_id, location_name, location_id, political, religion, relationship_status', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, fbid, createdAt, name, first_name, middle_name, last_name, gender, locale, link, age_range, birthday, hometown_name, hometown_id, location_name, location_id, political, religion, relationship_status', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'fbid' => Yii::t('app', 'Fbid'),
			'createdAt' => Yii::t('app', 'Created At'),
			'name' => Yii::t('app', 'Name'),
			'first_name' => Yii::t('app', 'First Name'),
			'middle_name' => Yii::t('app', 'Middle Name'),
			'last_name' => Yii::t('app', 'Last Name'),
			'gender' => Yii::t('app', 'Gender'),
			'locale' => Yii::t('app', 'Locale'),
			'link' => Yii::t('app', 'Link'),
			'age_range' => Yii::t('app', 'Age Range'),
			'birthday' => Yii::t('app', 'Birthday'),
			'hometown_name' => Yii::t('app', 'Hometown Name'),
			'hometown_id' => Yii::t('app', 'Hometown'),
			'location_name' => Yii::t('app', 'Location Name'),
			'location_id' => Yii::t('app', 'Location'),
			'political' => Yii::t('app', 'Political'),
			'religion' => Yii::t('app', 'Religion'),
			'relationship_status' => Yii::t('app', 'Relationship Status'),
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('fbid', $this->fbid, true);
		$criteria->compare('createdAt', $this->createdAt, true);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('first_name', $this->first_name, true);
		$criteria->compare('middle_name', $this->middle_name, true);
		$criteria->compare('last_name', $this->last_name, true);
		$criteria->compare('gender', $this->gender, true);
		$criteria->compare('locale', $this->locale, true);
		$criteria->compare('link', $this->link, true);
		$criteria->compare('age_range', $this->age_range, true);
		$criteria->compare('birthday', $this->birthday, true);
		$criteria->compare('hometown_name', $this->hometown_name, true);
		$criteria->compare('hometown_id', $this->hometown_id, true);
		$criteria->compare('location_name', $this->location_name, true);
		$criteria->compare('location_id', $this->location_id, true);
		$criteria->compare('political', $this->political, true);
		$criteria->compare('religion', $this->religion, true);
		$criteria->compare('relationship_status', $this->relationship_status, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}